(* Copyright 2014 Gabriele Mambrini 

 This grammar is for Grako (https://bitbucket.org/apalala/grako).

*)

(* TODO: sources, channels, expressions *)

configuration =
    rules:{rule}+ $
    ;

rule =
    'rule' name:identifier conditions:condition_list actions:action_list 'end'
    ;

condition_list =
    { condition }+
    ;

condition =
    'match' [ [ repeat:INTEGER 'times' ] 'within' limit:time_limit ] test:test
    [ 'set' assignment_list ]
    ;

time_limit =
    value:INTEGER unit:( 's' | 'm' | 'h' )
    ;

test = 
    or_test
    ;

or_test =
    @+:and_test {'or' @+:and_test}
    ;

and_test =
    @+:not_test {'and' @+:not_test}
    ;

not_test =
    'not' not:not_test | comparison:comparison
    ;

comparison =
      left:identifier op:comp_op right:expr
    | left:identifier op:'~'  right:REGEX
    | left:identifier op:'!~' right:REGEX
    ;
    
comp_op =
      '<'
    | '>'
    | '='
    | '>='
    | '<='
    | '!='
    | 'in'
    | 'not' 'in'
    ;

expr = 
      INTEGER
    | STRING
    | identifier
    ;


assignment_list =
    { @+:assignment }
    ;

assignment =
    identifier '=' expr
    ;

action_list =
    { @+:action }+
    ;

(* TODO action parameters *)
action =
     'action' @:identifier
     ;

identifier = IDENTIFIER ;

IDENTIFIER =
    ?/[a-zA-Z][a-zA-Z0-9]+/? 
    ;

SCOPED_IDENTIFIER =
    ?/[a-zA-Z][a-zA-Z0-9]+(\.[a-zA-Z][a-zA-Z0-9]+)+/? 		  
    ;

INTEGER =
    ?/[0-9]+/?
    ;

STRING =
    '"'  @:{?/[^"\n\\]/?|ESC} '"'
    |
    "'"  @:{?/[^'\n\\]/?|ESC} "'"
    ;

REGEX =
      '?/' ~ @:?/(.|\n)+?(?=/\?)/?? ?//\?+/?? ~
    | '/' ~ @:?/(.|\n)+?(?=/)/? '/' ~
    ;


ESC =
    ?/\\['"\\nrtbfv]/?
    |
    ?/\\u[a-fA-F0-9]{4}/?
    ;
